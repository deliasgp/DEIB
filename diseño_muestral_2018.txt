m_4p=ceiling((((1.96^2)*(0.5*(1-0.5)+0.1^2)*3919)/
                ((1.96^2)*(0.5*(1-0.5))+(0.1^2)*3919)))

m_5p=ceiling((((1.96^2)*(0.5*(1-0.5)+0.05^2)*3919)/
                ((1.96^2)*(0.5*(1-0.5))+(0.05^2)*3919)))

#PARA UN ERROR ENTRE 4 Y 5% SE NECESITA
ceiling((m_4p+m_5p)/2) 

x0=c("AMAZONAS", "ANCASH", "APURIMAC", "AREQUIPA", "AYACUCHO", "CAJAMARCA", 
     "CUSCO", "HUANCAVELICA", "HUANUCO", "JUNIN", "LAMBAYEQUE", "LIMA", "LORETO", 
     "MADRE DE DIOS", "MOQUEGUA", "PASCO", "PUNO", "SAN MARTIN", "TACNA", "UCAYALI")
x1=c(449, 362, 400, 25, 350, 11, 235, 139, 72, 379, 51, 18, 724, 21, 10, 51, 197, 27, 5, 393)
x2=x1/sum(x1)

w1=(((1.96^2)*(x2*(1-x2)+0.10^2)*x1)/((1.96^2)*(x2*(1-x2))+(0.10^2)*x1))
d=cbind(x0,x1,format(round(x2,4)*100,nsmall=2),ceiling(w1))
d
n=sum(w1)
n
#-------------------------------------------------------------------------#
#INSTALANDO PAQUETES NECESARIOS#
pkges=c("survey","sampling","xlsx")
  install.packages(pkges)
  lapply(pkges, library, character.only = TRUE)
#----------------------------#
#Coeficiente de variación
CV <- function(mean, sd){
  (sd/mean)*100
}
#---------------------------#
df=read.csv("D:/DEIB/Cuadros elaborados/Proyectos/Diagnostico EIB 2018/marco_muestral.csv"); attach(df)

N=nrow(df)

  df["y"]=paste(c_dpto,estrato,sep="."); attach(df)
      #-----------------------------------------------------# Total de IIEE por departamento
      nd=(c(by(Nd,y,mean,na.rm=T)))
      nd=data.frame(nd)
      nd["y"]=row.names(nd)
      #-----------------------------------------------------# 
      et=c(table(y))
      et=data.frame(et)
      et["y"]=row.names(et)
      #-----------------------------------------------------#
      #Desviación estandar del número de alumnos por estrato#
      s=(c(by(talumno,y,sd,na.rm=T))) #se by strata
      s=data.frame(s)
      s["y"]=row.names(s)
      df2=merge.data.frame(s,et,by="y");attach(df) #joining data frames
      #-----------------------------------------------------#
      #media del número de alumnos por estrato#
      m=(c(by(talumno,y,mean,na.rm=T))) #se by strata
      m=data.frame(m)
      m["y"]=row.names(m)
      #-----------------------------------------------------#
      df2=merge.data.frame(df2,m,by="y");attach(df) #joining data frames
      #-----------------------------------------------------#
      df2=merge.data.frame(df2,nd,by="y");attach(df) #joining data frames
      
      mat=as.data.frame(matrix(unlist((strsplit(df2$y,".",fixed=T))), ncol=2, byrow=TRUE))
      df2=cbind(df2,mat)
      
      df2["V3"]=(c(df2$s*df2$et)) #se by strata
      V4=(c(by(df2$V3,df2$V1,sum,na.rm=T)))
      V4=data.frame(V4)
      V4["V1"]=row.names(V4)
      df2=merge.data.frame(df2,V4,by="V1")
      
  df2["ah"] = df2$V3/df2$V4 #tamaño de muestra proporcional a la desviación estandar y a la población del estrato
  df2["p"]=df2$et/df2$nd
  df2["dp"] = df2$nd*0.15/qnorm(0.975) #Total de cada region*margen de error / nivel de significancia 95%
  df2["dv"] = df2$nd*7/qnorm(0.975) #Total de cada region*margen de error / nivel de significancia 95%
  
  #PROPORCION
  num1 = c(by(((df2$et^2)*0.5*(1-0.5))/df2$p,
              df2$V1,sum,na.rm=T))
  num1=data.frame(num1)
  num1["V1"]=row.names(num1)
  df2=merge.data.frame(df2,num1,by="V1")
  
  den1 = c(by((df2$et)*0.5*(1-0.5),df2$V1,sum,na.rm=T))
  den1=data.frame(den1)
  den1["V1"]=row.names(den1)
  df2=merge.data.frame(df2,den1,by="V1")
  df2["np"]=ceiling(df2$num1/(df2$dp^2+df2$den1)) #Tamaño de muestra para cada región
  df2["nhp"] = ceiling(df2$p*df2$np) #Tamaño de muestra para cada estrato de cada región
  
  a=c(sum(df2$nhp)); a
####################################################################################################### 
  set.seed(2017)
  df = df[order(df$y),]
  df["ID_unit"]=row.names(df)
  
  mp=strata(df,c("y"),size=df2$nhp,method="srswor")
  
  sample2= merge.data.frame(mp,df,by="ID_unit",all=T)

write.csv(sample2, "D:/DEIB/Cuadros elaborados/Proyectos/Diagnostico EIB 2018/sample.csv")

dMAE=svydesign(id=~ID,strata=~estrato,fpc = ~fpc,data=df,weights = pw)
a1 = svymean(~talumno,dMAE); a1
a2 = svytotal(~talumno,dMAE); a2
a3 = svytable(~estrato,dMAE); a3
mean(df$talumno)
sum(df$talumno)
table(df$estrato)